parameters:
 info: |
     This plan deploys assisted installer engine and api in a vm, with an optional number of vm nodes. Furthermore, aicli gets deployed
     The method for deployment can either be onprem, openshift or minikube.
     Minikube gets deployed with docker
     Openshift requires a kubeconfig file to be specified
     A pull secret can be provided to interact with aicli directly from the installer vm
 disk_size: 80
 numcpus: 8
 memory: 17408
 pool: default
 image: centos8
 method: onprem
 network: default
 notify: true
 start: false
 nodes: 0
 nodes_numcpus: 8
 nodes_memory: 16384
 nodes_disks_size: 120
 deploy_installer: true
 playbook: false
 racadm: false
 iso:
 keys: []
 cluster: testk
 api_ip: 192.168.122.253
 ingress_ip: 192.168.122.252
 domain: karmalabs.com
 kubeconfig: kubeconfig
 pullsecret: openshift_pull.json

{{ image }}:
  type: image

{% for num in range(0, nodes) %}
{{ cluster }}-node-{{ num }}:
 pool: {{ pool }}
 numcpus: {{ nodes_numcpus }}
 start: {{ start }}
 iso: {{ iso if iso != None else cluster + ".iso" }}
 memory: {{ nodes_memory }}
 nets:
  - name: {{ network }}
 disks:
  - size: {{ nodes_disks_size }}
{% endfor %}

{% if deploy_installer %}
{{ cluster }}-installer:
 image: {{ image }}
 playbook: {{ playbook }}
 pool: {{ pool }}
 memory: {{ memory }}
 numcpus: {{ numcpus }}
 disks: [{{ disk_size }}]
 nets: [{{ network }}]
 keys: {{ keys }}
 files:
 - racadm.sh
{% if pullsecret != None %}
 - origin: {{ pullsecret }}
   path: /root/openshift_pull.json
{% endif %}
{% if method == 'openshift' %}
 - origin: {{ kubeconfig }}
   path: /root/kubeconfig
{% endif %}
 cmds:
 - ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa
 - sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
 - setenforce 0
 scripts:
{% if method == "minikube" %}
 - minikube.sh
{% endif %}
 - install.sh
 - aicli.sh
 notify: {{ notify }}
 notifyscript: notify.sh
{% endif %}
